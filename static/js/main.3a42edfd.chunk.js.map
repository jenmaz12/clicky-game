{"version":3,"sources":["components/Wrapper/index.js","components/Title/index.js","components/Card/index.js","components/NavBar/index.js","App.js","index.js"],"names":["Wrapper","props","react_default","a","createElement","className","children","Title","id","bb","clicky","Card","_ref","clickHandler","image","name","src","alt","onClick","NavBar","score","message","topScore","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSaveClick","cardz","state","cards","cardClicked","filter","card","clicked","handleIncorrectClick","handleCorrectClick","shuffleCards","setState","characters","sort","b","Math","random","isGuessCorrect","maxScore","messageClass","resetGame","i","length","_this2","_this$state","title","components_Wrapper","components_NavBar","components_Title","map","components_Card","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3a42edfd.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from 'react';\nimport './style.css';\n\nfunction Title(props) {\n  return (\n    <div className='jumbotron jumbotron-fluid'>\n      <div className='container'>\n        <h1 className='display-4' id='bikiniBottom'>\n          {props.bb}\n        </h1>\n        <h1 className='display-4'>{props.clicky}</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default Title;\n","import React from 'react';\nimport './style.css';\n\nfunction Card({ clickHandler, id, image, name }) {\n  return (\n    <div className='card'>\n      <img\n        src={image}\n        alt={name}\n        className='card-img'\n        onClick={() => clickHandler(id)}\n      />\n    </div>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport './style.css';\n\nfunction NavBar(props) {\n  return (\n    <ul className='nav'>\n      <li className='nav-item'>Score: {props.score}</li>\n      <li className='nav-item'>{props.message}</li>\n      <li className='nav-item' id='topScore'>\n        Top Score: {props.topScore}\n      </li>\n    </ul>\n  );\n}\n\nexport default NavBar;\n","import React, { Component } from 'react';\nimport Wrapper from './components/Wrapper';\nimport Title from './components/Title';\nimport Card from './components/Card';\nimport NavBar from './components/NavBar';\nimport cards from './cards.json';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isGuessCorrect: true,\n      cards: cards,\n      score: 0,\n      maxScore: 12,\n      topScore: 0,\n      message: 'CLICK AN IMAGE TO BEGIN!',\n    };\n  }\n\n  // Main click handler function\n  handleSaveClick = id => {\n    // Variable to hold the tiles state.\n    const cardz = this.state.cards;\n    // Search through character tiles to find the one that matches the clicked id.\n    const cardClicked = cardz.filter(card => card.id === id);\n\n    // If the card isn't clicked...\n    if (!cardClicked[0].clicked) {\n      // set it to now be clicked\n      cardClicked[0].clicked = true;\n      // call this function to register the correct guess\n      this.handleCorrectClick();\n\n      // randomize character cards\n      this.shuffleCards(cardz);\n\n      this.setState({ cardz });\n    } else {\n      this.handleIncorrectClick();\n    }\n  };\n\n  shuffleCards = characters => {\n    characters.sort((a, b) => {\n      return 0.5 - Math.random();\n    });\n  };\n\n  // Handler for correct guesses/clicks\n  handleCorrectClick = () => {\n    this.setState({ isGuessCorrect: true });\n    if (this.state.score + 1 > this.state.topScore) {\n      this.setState({ topScore: this.state.topScore + 1 });\n    }\n    if (this.state.score + 1 >= this.state.maxScore) {\n      this.setState({\n        score: this.state.score + 1,\n        message: 'CONGRATS! YOU WIN!',\n        messageClass: 'correct',\n      });\n    } else {\n      this.setState({\n        score: this.state.score + 1,\n        message: 'YOU GUESSED CORRECTLY!',\n        messageClass: 'correct',\n      });\n    }\n  };\n\n  // Handler for incorrect guesses/clicks\n  handleIncorrectClick = () => {\n    this.setState({\n      message: 'INCORRECT. PLAY AGAIN?',\n      isGuessCorrect: false,\n    });\n    this.resetGame();\n  };\n\n  // Resets the game\n  resetGame = id => {\n    const cardz = this.state.cards;\n    for (let i = 0; i < cardz.length; i++) {\n      cardz[i].clicked = false;\n    }\n    this.setState({ score: 0 });\n  };\n\n  render() {\n    const { message, score, cards, topScore } = this.state;\n    const title = {\n      bb: 'Bikini Bottom',\n      clicky: 'Clicky Game',\n    };\n    return (\n      <Wrapper>\n        <NavBar message={message} score={score} topScore={topScore} />\n        <Title bb={title.bb} clicky={title.clicky} />\n        <div className='container'>\n          <div id='cards-row' className='row justify-content-center'>\n            {cards.map(card => (\n              <Card\n                key={card.id}\n                id={card.id}\n                name={card.name}\n                image={card.image}\n                clicked={card.clicked}\n                clickHandler={this.handleSaveClick}\n              />\n            ))}\n          </div>\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}